{"ast":null,"code":"const handleSubmit = e => {\n  e.preventDefault();\n  console.log(\"Formulario enviado\"); // Para verificar que se ha enviado el formulario\n\n  const credentials = {\n    CORREO: correo,\n    // Asegúrate de que los nombres coincidan con los que espera tu API\n    CONTRASENA: contrasena\n  };\n  fetch('http://localhost:8080/api/v1/admin/tablaUsuarios/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(response => {\n    console.log(response); // Para verificar la respuesta\n    if (!response.ok) {\n      throw new Error('Credenciales inválidas');\n    }\n    // Intentar obtener JSON primero, si falla, capturar el error y usar response.text()\n    return response.json().catch(() => response.text());\n  }).then(data => {\n    setMensaje(data);\n    console.log('Login exitoso:', data);\n    navigate('/cita'); // Redireccionar a otra ruta después del login exitoso\n  }).catch(error => {\n    setMensaje(error.message);\n    console.error('Error:', error);\n  });\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","console","log","credentials","CORREO","correo","CONTRASENA","contrasena","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","catch","text","data","setMensaje","navigate","error","message"],"sources":["C:/Users/ASUS CI5 VIVOBOOK/Downloads/proyecto_biblioteca/proyecto_final/biblioteca/src/pages/Login.js"],"sourcesContent":["const handleSubmit = (e) => {\n  e.preventDefault();\n  console.log(\"Formulario enviado\"); // Para verificar que se ha enviado el formulario\n\n  const credentials = {\n    CORREO: correo,        // Asegúrate de que los nombres coincidan con los que espera tu API\n    CONTRASENA: contrasena\n  };\n\n  fetch('http://localhost:8080/api/v1/admin/tablaUsuarios/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(credentials),\n  })\n      .then(response => {\n        console.log(response); // Para verificar la respuesta\n        if (!response.ok) {\n          throw new Error('Credenciales inválidas');\n        }\n        // Intentar obtener JSON primero, si falla, capturar el error y usar response.text()\n        return response.json().catch(() => response.text());\n      })\n      .then(data => {\n        setMensaje(data);\n        console.log('Login exitoso:', data);\n        navigate('/cita'); // Redireccionar a otra ruta después del login exitoso\n      })\n      .catch((error) => {\n        setMensaje(error.message);\n        console.error('Error:', error);\n      });\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAIC,CAAC,IAAK;EAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC;;EAEnC,MAAMC,WAAW,GAAG;IAClBC,MAAM,EAAEC,MAAM;IAAS;IACvBC,UAAU,EAAEC;EACd,CAAC;EAEDC,KAAK,CAAC,wDAAwD,EAAE;IAC9DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW;EAClC,CAAC,CAAC,CACGW,IAAI,CAACC,QAAQ,IAAI;IAChBd,OAAO,CAACC,GAAG,CAACa,QAAQ,CAAC,CAAC,CAAC;IACvB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IACA;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;EACrD,CAAC,CAAC,CACDN,IAAI,CAACO,IAAI,IAAI;IACZC,UAAU,CAACD,IAAI,CAAC;IAChBpB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEmB,IAAI,CAAC;IACnCE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CACDJ,KAAK,CAAEK,KAAK,IAAK;IAChBF,UAAU,CAACE,KAAK,CAACC,OAAO,CAAC;IACzBxB,OAAO,CAACuB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC,CAAC,CAAC;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}